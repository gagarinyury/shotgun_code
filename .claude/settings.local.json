{
  "permissions": {
    "allow": [
      "Bash(flutter pub run build_runner build:*)",
      "Bash(flutter test:*)",
      "Bash(if [ -f coverage/lcov.info ])",
      "Bash(then echo \"Coverage file generated\")",
      "Bash(else echo \"Coverage file not found\")",
      "Bash(fi)",
      "Bash(flutter analyze:*)",
      "Bash(if [ -f /Users/yurygagarin/code/shotgun_code/shotgun_flutter/coverage/lcov.info ])",
      "Bash(cat:*)",
      "Bash(flutter --version:*)",
      "Bash(cd:*)",
      "Bash(go env:*)",
      "Bash(go version:*)",
      "Bash(chmod:*)",
      "Bash(./build_lib.sh:*)",
      "Bash(ln:*)",
      "Bash(tee:*)",
      "Read(//private/tmp/**)",
      "Bash(git add:*)",
      "Bash(git commit -m \"$(cat <<''EOF''\nfeat: Phase 1 - Go Backend FFI Integration (partial)\n\n## Phase 0 Complete ✅\n- Flutter project with Clean Architecture structure\n- Core error handling (Failures, Exceptions)\n- Logger with test coverage (100%)\n- CI/CD pipeline configured\n- Documentation (ARCHITECTURE.md, CONTRIBUTING.md)\n- All tests passing (8/8)\n\n## Phase 1 Progress (40% complete)\n### Completed ✅\n- Go FFI bridge (backend/bridge.go) with C exports\n- Build script for cross-platform compilation\n- macOS shared libraries built (arm64 + amd64)\n- Domain layer:\n  - FileNode entity with Equatable\n  - ProjectRepository interface\n- Data layer:\n  - FileNodeModel with Freezed + JSON serialization\n  - BackendBridge FFI wrapper\n  - BackendDataSource implementation\n  - ProjectRepositoryImpl with Either pattern\n\n### Not Completed ❌\n- Unit tests for new components\n- Integration tests\n- Memory leak verification\n- Flutter analyze errors (14 issues)\n\n## Technical Details\n- Go backend: ListFilesFFI exported via CGo\n- FFI: Platform-specific library loading (macOS/Linux/Windows)\n- Clean Architecture: Domain ← Data separation maintained\n- Error handling: Exception → Failure conversion\n\n## Files Changed: 162 files, 13,867 insertions\n\n🤖 Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(flutter pub get:*)",
      "Bash(tree:*)",
      "Bash(test:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(awk:*)",
      "Bash(xargs kill:*)",
      "Bash(mkdir:*)",
      "Bash(dart:*)",
      "Bash(then echo \"Coverage file generated ✅\")",
      "Bash(go build:*)"
    ],
    "deny": [],
    "ask": []
  }
}
